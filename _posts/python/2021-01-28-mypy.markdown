---
layout: post
category: python
title: How to use Mypy in pre-commit hooks, Github Actions and continuous integration
permalink: /mypy
---
<div class="wide-logos" markdown="1">
![python](/assets/python.png)
</div>

## Pre-commit hooks

Install [pre-commit](https://pre-commit.com).

Add to the `.pre-commit-config.yaml` file in the root of your repository:

```yaml
repos:
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.730
    hooks:
      - id: mypy
        exclude: ^tests/
        args: [--disallow-untyped-calls, --disallow-untyped-defs, --check-untyped-defs]
```

Install your git hooks:
```sh
pre-commit install  # or "autoupdate" if you've already installed previously.
```

## Github Actions

Create a `.github/workflows/checks.yml` file in the root of your repository and
add the following:

```sh
name: Checks
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Checks
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - run: |
        pip install --upgrade pip
        pip install black==21.6b0
        mypy --disallow-untyped-defs --disallow-untyped-calls --check-untyped-defs mypackage
```

## Continuous Integration

To fail the build if Mypy finds an type error, simply call mypy in your build
script.

```sh
mypy --disallow-untyped-calls --disallow-untyped-defs --check-untyped-defs /path/to/code
```

Mypy will exit with a non-zero exit status if it finds an error, which should
fail the build.

## See also

- [Use Black in Vim, pre-commit hooks, Github Actions and continuous integration](/black)
- [Use Pylint in pre-commit hooks, Github Actions and continuout integration](/pylint)
