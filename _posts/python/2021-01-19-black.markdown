---
layout: post
category: python
title: How to use Black in Vim 8, pre-commit hooks, Github Actions and continuous integration
permalink: /black
---
<div class="wide-logos" markdown="1">
![python](/assets/python.png)
</div>

It's important to choose a specific Black version to use (rather than just
"master"). The versions you use everywhere (in your editor/IDE, pre-commit, and
used by other contributors) must be the same so there are no inconsistencies.

## Vim 8

This method uses the built-in plugin management in Vim 8+.

```sh
sudo rm -rf ~/.vim/black
mkdir -p ~/.vim/pack/start/black/plugin
curl https://raw.githubusercontent.com/psf/black/21.6b0/plugin/black.vim -o ~/.vim/pack/start/black/plugin/black.vim
```

Add the following to `~/.vimrc` to format with Black every time you save.
```
autocmd BufWritePre *.py execute ':Black'
```

Next time you open a Python file in Vim, Black will install.

## Pre-commit hooks

Install [pre-commit](https://pre-commit.com).

Add the following `.pre-commit-config.yaml` file to the root of your
repository.

```yaml
repos:
  - repo: https://github.com/ambv/black
    rev: 20.8b1
    hooks:
      - id: black
        args: [--diff, --check]
```

Install the git hooks:
```sh
pre-commit install  # or "autoupdate" if you've already installed previously.
```

This will abort a commit if code hasn't been formatted.

## Github Actions

Create a `.github/workflows/checks.yml` file in the root of your repository and
add the following.

```sh
name: Checks
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Checks
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - run: |
        pip install --upgrade pip
        pip install black==21.6b0
        black --diff --check mypackage
```

## Continuous Integration

I like to fail builds if code hasn't been formatted. This ensures every
developer must format their code. Simply call black in your build script.

```sh
black --diff --check /path/to/code
```

Black will exit with a non-zero exit status if code isn't formatted, which
should fail the build.

## See also

- [Use Mypy in pre-commit hooks, Github Actions and continuous integration](/mypy)
- [Use Pylint in pre-commit hooks, Github Actions and continuous integration](/pylint)
